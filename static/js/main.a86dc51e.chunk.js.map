{"version":3,"sources":["ControlForm.js","App.js","reportWebVitals.js","index.js"],"names":["ControlledComponent","handleSubmit","e","a","preventDefault","Object","keys","state","filter","key","length","alert","console","log","handlePhoneNumberValidation","errors","target","value","name","isNaN","setState","handleEmailValidation","test","email","handleChange","handleReset","firstName","lastName","phone","comments","points","onSubmit","type","this","onChange","style","color","minLength","maxLength","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a86dc51e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nclass ControlledComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      comments:'',\r\n      points:'',\r\n\r\n      errors: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        comments:'',\r\n        points:'',\r\n      },\r\n    };\r\n  }\r\n \r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line\r\n    var errKeys = await Object.keys(this.state).filter((key) => {\r\n\r\n      if (this.state[key] === '' && this.state[key] !== 'errors') \r\n        return key;\r\n\r\n    });\r\n\r\n    if (errKeys.length >= 1) \r\n    {\r\n        alert('Please fill all fields');\r\n    }\r\n\r\n    else{\r\n    console.log(this.state);\r\n    }\r\n    \r\n  };\r\n\r\n handlePhoneNumberValidation=(e)=>{\r\n    var errors = { ...this.state.errors };\r\n    if (e.target.value === '') \r\n    {\r\n      errors[e.target.name] = 'Required';\r\n    }\r\n    else if (isNaN(e.target.value)) \r\n    {\r\n      errors[e.target.name] = 'cant contain letters';\r\n      this.setState({[e.target.name]: '' });\r\n    }\r\n    \r\n    else {\r\n      errors[e.target.name] = '';\r\n    }\r\n    this.setState({ errors, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleEmailValidation=(e)=>{\r\n    var errors = { ...this.state.errors };\r\n    if(e.target.name==='email'){\r\n      // eslint-disable-next-line\r\n    var pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if(pattern.test(e.target.value)){\r\n      errors.email=\"\";\r\n    }\r\n    else if(e.target.value===\"\"){\r\n      errors.email=\"required\";\r\n    }\r\n    else{\r\n      errors.email=\"enter a valid email\";\r\n      this.setState({[e.target.name]: '' });\r\n    }\r\n    }\r\n    this.setState({ errors, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleChange = async (e) => {\r\n    var errors = { ...this.state.errors };\r\n     \r\n  if (e.target.value === '') {\r\n      errors[e.target.name] = 'Required';\r\n    } \r\n   \r\n    else {\r\n      errors[e.target.name] = '';\r\n    }\r\n\r\n  await this.setState({ errors, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleReset = () => {\r\n\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone:'',\r\n      comments:'',\r\n      points:'',\r\n\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h3> Feedback Form </h3>\r\n          <form onSubmit={(e) => this.handleSubmit(e)}>\r\n            <div>\r\n              <label> First Name </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={this.state.firstName}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              <br />\r\n              <span style={{ color: 'red' }}>\r\n                {' '}\r\n                {this.state.errors.firstName}{' '}\r\n              </span>\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <label> Last Name </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={this.state.lastName}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              <br />\r\n              <span style={{ color: 'red' }}>\r\n                {' '}\r\n                {this.state.errors.lastName}{' '}\r\n              </span>\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <label> Email </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.handleEmailValidation(e)}\r\n              />\r\n              <br />\r\n              <span style={{ color: 'red' }}> {this.state.errors.email} \r\n             \r\n\r\n              </span>\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n            <label> Phone Number </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                minLength='10'\r\n                maxLength='10'\r\n                value={this.state.phone}\r\n                onChange={(e) => this.handlePhoneNumberValidation(e)}\r\n                \r\n                \r\n              />{' '}\r\n              <br />\r\n              <span style={{ color: 'red' }}>\r\n                {' '}\r\n                {this.state.errors.phone}{' '}\r\n              </span>\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <label> Ratings </label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"points\"\r\n                value=\"1\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              1\r\n              <input\r\n                type=\"radio\"\r\n                name=\"points\"\r\n                value=\"2\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              2\r\n              <input\r\n                type=\"radio\"\r\n                name=\"points\"\r\n                value=\"2\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              3\r\n              <input\r\n                type=\"radio\"\r\n                name=\"points\"\r\n                value=\"2\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              4\r\n              <input\r\n                type=\"radio\"\r\n                name=\"points\"\r\n                value=\"2\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              5\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <label> Comments </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"comments\"\r\n                value={this.state.comments}\r\n                onChange={(e) => this.handleChange(e)}\r\n              />{' '}\r\n              <br />\r\n              <span style={{ color: 'red' }}>\r\n                {' '}\r\n                {this.state.errors.comments}{' '}\r\n              </span>\r\n            </div>\r\n            <br />\r\n    \r\n            <button type=\"submit\"> Submit </button> &nbsp;\r\n            <button type=\"button\" onClick={this.handleReset}>\r\n              {' '}\r\n              Reset\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlledComponent;","\nimport './App.css';\n// import ControlledComponent from './controlledForm'\n import ControlledComponent from './ControlForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <ControlledComponent/> */}\n      <ControlledComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}